{"version":3,"sources":["source_explanations sync /^/.//.*/.output/.json$","source_explanations sync /^/.//.*/.voc/.json$","source_explanations sync /^/.//.*/.tags/.json$","App.js","BoxInfo.js","PuzzleInfo.js","serviceWorker.js","index.js"],"names":["map","./nielspasta-split-nested.output.json","./p5-split-nested.output.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./nielspasta-split-nested.voc.json","./p5-split-nested.voc.json","./nielspasta-split-nested.tags.json","./p5-split-nested.tags.json","steps","vocabulary","sol","bijectivity","logigramConstraint","transitivity","combinationConstraints","logicon","legend","legend_new_fact","legend_derived_fact","legend_false","legend_true","legend_contradiction","initialState","clue","known","derived","assumptions","nestedReducer","state","next","concat","toConsumableArray","derivations","sequenceReduce","nestedSequenceInitialState","fact","derivable_fact","reason_sequence","R","slice","reducer","reasonSequenceInitialState","nested_explanations","Array","isArray","getKnowledgeFrom","inArray","entity1","entity2","find","subject","object","matches","styles","parentGrid","nbEntities","nbTypes","display","width","height","grid-template-columns","repeat","parentGridItem","border","parentGridItemVoc","vertical","_objectSpread","background-color","color","flex-direction","childVocGridItem","align-items","justify-content","writing-mode","size","parentGridItemEmpty","parentGridItemFill","childFillGridItem","frontcolor","childNestedButtonItem","Grid","_ref2","facts","counterfact","explSeqActive","nestedExplSeqActive","funSequenceIndex","funNestedIndex","length","horizontalTypes","verticalTypes","reverse","react_default","a","createElement","style","type","VocBlock","index","Fragment","type2","index2","FillBlock","type1","_ref3","_ref3$vertical","entity","EmptyGrid","_ref4","RegularExplanation","_ref5","derivedKnowledge","assumedKnowledge","knownKnowledge","counterfactColored","knowledge","value","SequenceExplanationGrid","_ref6","factKnowledge","posInDerived","indexOf","className","onClick","_ref7","Legend","class","UsedClue","_ref8","clues","unique","listClues","element","charAt","toUpperCase","App","cluesTags","_ref","problemName","require","uniqueclues","filter","item","pos","el","i","splice","push","cleanClues","_React$useState","React","useState","_React$useState2","slicedToArray","setIndex","_React$useState3","_React$useState4","sequenceIndex","setSequenceIndex","_React$useState5","_React$useState6","nestedIndex","setNestedIndex","factsOverTime","useMemo","some","setSequenceIndexClipped","newIndex","maxVal","setIndexClipped","setNestedIndexClipped","maxLength","usedClue","ReactDOM","render","document","getElementById","prevNextButton","header","prevNextSequenceButton","role","aria-label","nExpl","JSON","parse","stringify","nested_sequence_length","Math","max","selectedBox","cluesIntroText","tagsIntroText","lexiconIntroText","folIntroText","idpIntroText","activeClue","activeClueFol","displayTypes","postags","chunking_lexicon","fol","idp","setToClue","clueNr","tagName","tagChild","setToClueFol","folName","folChild","setBoxInfoDisplayTo","displayType","Clues","entities","Tags","tags","Lexicon","lexicon","FOL","IDP","listIdpItems","elem","idpTable","introText","logicRepresentation","types","CombTypes","fol_keys","listItems","key","keyElem","listvals","split","foreach","letter","replace","highlightEntities","cleanedEntities","toLowerCase","forEach","splitelem","cleanEntities","cleanedClues","entitiesTable","cluesTable","lexiconitems","lex","lexiconTable","InfoText","InfoButtons","BoxInfo","blockQuoteIntroText","PuzzleInfo","Boolean","window","location","hostname","match","src_PuzzleInfo","src_App","src_BoxInfo","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79779e7f.chunk.js","sourcesContent":["var map = {\n\t\"./nielspasta-split-nested.output.json\": 16,\n\t\"./p5-split-nested.output.json\": 17\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;","var map = {\n\t\"./nielspasta-split-nested.voc.json\": 19,\n\t\"./p5-split-nested.voc.json\": 20\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18;","var map = {\n\t\"./nielspasta-split-nested.tags.json\": 23,\n\t\"./p5-split-nested.tags.json\": 24\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","import React from \"react\";\nimport \"./App.css\";\nimport * as R from \"ramda\";\nimport ReactDOM from \"react-dom\";\n\nvar steps;\nvar vocabulary;\n\n// String constants used in the file\n\nconst sol = \"Solution!\";\nconst bijectivity = \"Bijectivity\";\nconst logigramConstraint = \"Logigram Constraint\";\nconst transitivity = \"Transitivity constraint\";\nconst combinationConstraints = \"Combination of logigram constraints\";\nconst logicon = \"Logigram constraints\";\n\nconst legend = \"Legend\";\nconst legend_new_fact = \"New fact\";\nconst legend_derived_fact = \"Known fact\";\nconst legend_false = \"False\";\nconst legend_true = \"True\";\nconst legend_contradiction = \"Contradiction Fact\"\n\nconst initialState = {\n  clue: null,\n  known: [],\n  derived: [],\n  assumptions: []\n};\n\nfunction nestedReducer(state, next){\n  return {\n    clue: next.clue,\n    known: [...state.known, ...state.derived],\n    derived: next.derivations,\n    assumptions: next.assumptions,\n  };\n}   \n\nfunction sequenceReduce(state, next){\n\n  const nestedSequenceInitialState = {\n    clue: null,\n    known: state.known == null ? [] : state.known,\n    derived: [],\n    assumptions: []\n  }\n\n  return {\n    fact: next.derivable_fact,\n    known:state.known,\n    reason_sequence: next.reason_sequence != null ? R.scan(nestedReducer, nestedSequenceInitialState, next.reason_sequence).slice(1) : null\n  }\n}  \n\nfunction reducer(state, next) {\n\n  const reasonSequenceInitialState = {\n    fact:null,\n    reason_sequence: [],\n    known: next.assumptions\n  } \n\n  return {\n    clue: next.clue,\n    known: [...state.known, ...state.derived],\n    derived: next.derivations,\n    assumptions: next.assumptions,\n    nested_explanations: Array.isArray(next.nested_explanations) ? R.scan(sequenceReduce, reasonSequenceInitialState,next.nested_explanations).slice(1): null\n  };\n}\n\nfunction cleanedFacts(steps) {\n  const factsOverTime = R.scan(reducer, initialState, steps);\n  return factsOverTime.filter(facts =>\n    facts.derived.some(\n      knowledge =>\n        getKnowledgeFrom(facts.known, knowledge.subject, knowledge.object) ==\n        null\n    )\n  );\n}\n\nfunction getKnowledgeFrom(inArray, entity1, entity2) {\n  return inArray.find(matches(entity1, entity2));\n}\n\nfunction matches(entity1, entity2) {\n  return fact => {\n    if (fact.subject === entity1 && fact.object === entity2) {\n      return true;\n    }\n    if (fact.object === entity1 && fact.subject === entity2) {\n      return true;\n    }\n    return false;\n  };\n}\n\nconst size = 32;\nconst styles = {\n  parentGrid: (nbEntities, nbTypes) => ({\n    display: \"grid\",\n    width: nbEntities * nbTypes * size,\n    height: nbEntities * nbTypes * size,\n    \"grid-template-columns\": `auto `.repeat(nbTypes)\n  }),\n  parentGridItem: nbEntities => ({\n    width: size * nbEntities - 2,\n    height: size * nbEntities - 2,\n    border: \"1px solid black\"\n  }),\n  parentGridItemVoc: (nbEntities, vertical) => ({\n    ...styles.parentGridItem(nbEntities),\n    \"background-color\": \"whitesmoke\",\n    color: \"black\",\n    display: \"grid\",\n    \"grid-template-columns\": `auto `.repeat(vertical ? nbEntities : 1),\n    \"flex-direction\": vertical ? \"row\" : \"column\"\n  }),\n  childVocGridItem: (nbEntities, vertical) => ({\n    border: \"1px dashed black\",\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    ...(vertical\n      ? {\n          \"writing-mode\": \"vertical-lr\",\n          width: size - 2,\n          height: size * nbEntities - 2\n        }\n      : {\n          width: size * nbEntities - 2,\n          height: size - 2\n        })\n  }),\n  parentGridItemEmpty: nbEntities => ({\n    width: nbEntities * size,\n    height: nbEntities * size\n  }),\n  parentGridItemFill: nbEntities => ({\n    ...styles.parentGridItem(nbEntities),\n    display: \"grid\",\n    \"grid-template-columns\": `auto `.repeat(nbEntities)\n  }),\n  childFillGridItem: (color, frontcolor) => ({\n    width: size - 2,\n    height: size - 2,\n    border: \"1px dashed black\",\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    \"background-color\": color,\n    color: frontcolor\n  }),\n  childNestedButtonItem:(color, frontcolor) => ({\n    width: size - 2,\n    height: size - 2,\n    border: \"5px solid black\",\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    \"background-color\": color,\n    color: frontcolor\n  })\n};\n\nfunction cleanClues(steps) {\n  const clues = steps.map(element => element.clue);\n  const uniqueclues = clues\n    .filter(function(item, pos) {\n      return clues.indexOf(item) === pos;\n    })\n    .filter(function(el) {\n      return (\n        [\n          bijectivity,\n          logigramConstraint,\n          transitivity,\n          combinationConstraints,\n          logicon\n        ].indexOf(el) < 0\n      );\n    });\n\n  for (var i = uniqueclues.length - 1; i >= 0; i--) {\n    if (uniqueclues[i] === logicon || uniqueclues[i] === sol) {\n      uniqueclues.splice(i, 1);\n    }\n  }\n\n  uniqueclues.push(bijectivity);\n  uniqueclues.push(transitivity);\n  uniqueclues.push(combinationConstraints);\n\n  return uniqueclues;\n}\n\nfunction App({ problemName }) {\n  // input files\n  \n  steps = require(`./source_explanations/${problemName}.output.json`);\n  vocabulary = require(`./source_explanations/${problemName}.voc.json`);\n\n  const clues = cleanClues(steps);\n\n  // state variables: whenever they are updated, the hooks back to this place => update interface\n  const [index, setIndex] = React.useState(0);\n  const [sequenceIndex, setSequenceIndex] = React.useState(0)\n  // const [activeSequenceIndex, setActiveSequenceIndex] = React.useState(0)\n  const [nestedIndex, setNestedIndex] = React.useState(0)\n\n  const factsOverTime = React.useMemo(() => {\n    return cleanedFacts(steps);\n  }, []);\n\n\n  function setSequenceIndexClipped(newIndex, maxVal){\n    // setNestedIndex(0)\n    if (newIndex > maxVal) {\n      setSequenceIndex(maxVal);\n    } else if (newIndex < 0) {\n      setSequenceIndex(0);\n    } else {\n      setSequenceIndex(newIndex);\n    }\n  }\n\n function setIndexClipped(newIndex) {\n    setNestedIndex(-1)\n    setSequenceIndex(-1)\n    if (newIndex >= factsOverTime.length) {\n      setIndex(factsOverTime.length);\n    } else if (newIndex < 0) {\n      setIndex(0);\n    } else {\n      setIndex(newIndex);\n    }\n  }\n\n  function setNestedIndexClipped(newIndex, maxLength) {\n\n    if (newIndex > maxLength) {\n      setNestedIndex(maxLength);\n    } else if (newIndex < 0) {\n      setNestedIndex(0);\n    } else {\n      setNestedIndex(newIndex);\n    }\n  }\n\n  let facts = null\n  let usedClue\n\n  if(nestedIndex > 0){\n    facts = factsOverTime[index-1];\n    usedClue = <UsedClue clues={clues} clue={facts.nested_explanations[sequenceIndex-1].reason_sequence[nestedIndex-1].clue} />\n  }else if(index > 0){\n    facts = factsOverTime[index-1];\n    usedClue = <UsedClue clues={clues} clue={facts.clue} />\n  }else{\n    usedClue = <UsedClue clues={clues} clue={null} />\n  }\n\n   \n  ReactDOM.render(\n    <div className=\"Clues\">\n      <h2><span class=\"line-center\">Clues</span></h2>\n      {usedClue}\n      <Legend />\n      <p></p>\n    </div>\n    ,document.getElementById(\"clues\"));\n\n  const header = (<h2><span className=\"line-center\">Puzzle</span></h2>);\n  \n  let prevNextButton;\n  let prevNextSequenceButton = null\n  let counterfact = null\n\n  if( facts === null){\n    prevNextButton = <div><button onClick={() => setIndexClipped(index + 1)}>start</button></div>\n  }else if(Array.isArray(facts.nested_explanations)){\n\n    prevNextButton = <div>\n          <table>\n          <td><button onClick={() => setIndexClipped(index - 1)}>&#8592; Prev</button></td>\n            <td className=\"buttonNavigationClues\"></td>\n            <td><button className=\"heavyBorder\" onClick={() => setSequenceIndex(1)}><span  role=\"img\"  aria-label=\"help\">&#x1F4A1; - HELP</span></button></td>\n            <td className=\"buttonNavigationClues\"></td>\n            <td><button onClick={() => setIndexClipped(index + 1)}>Next &#8594;</button></td>\n\n          </table> \n        </div>  \n    \n    const nested_explanations = facts.nested_explanations.filter((nExpl) => nExpl.fact != null)\n    \n    if(sequenceIndex > 0 && nestedIndex > 0){\n\n      counterfact = JSON.parse(JSON.stringify(nested_explanations[sequenceIndex-1].fact))\n      counterfact.value = ~counterfact.value\n\n      facts=nested_explanations[sequenceIndex-1].reason_sequence.filter((nExpl) => nExpl.clue != null)[nestedIndex-1]\n      const nested_sequence_length = nested_explanations[sequenceIndex-1].reason_sequence.length\n\n      prevNextButton = <div>\n          <table>\n          <td><button onClick={() => setIndexClipped(index - 1)}>&#8592; Prev</button></td>\n            <td className=\"buttonNavigationClues\"></td>\n            <td><button className=\"buttonNavigationCluesExit heavyBorder\" onClick={() => setIndexClipped(index)}>Back to MAIN explanations</button></td>\n            <td className=\"buttonNavigationClues\"></td>\n            <td><button onClick={() => setIndexClipped(index + 1)}>Next &#8594;</button></td>\n          </table> \n        </div>  \n      \n      prevNextSequenceButton = <div>\n        <h5 className=\"blue-font\">Nested Explanation</h5>\n        <table>\n            <td><button onClick={() => setNestedIndexClipped(Math.max(1, nestedIndex-1), nested_sequence_length)}>&#8592;</button></td>\n            <td className=\"buttonNavigationClues\"></td>\n            <td><button className=\"buttonNavigationCluesExit heavyBorder\" onClick={() => setNestedIndexClipped(0)}>Back to NESTED explanations</button></td>\n            <td className=\"buttonNavigationClues\"></td>\n            <td><button onClick={() => setNestedIndexClipped(nestedIndex+1, nested_sequence_length)}><span>&#8594;</span></button></td>\n        </table> \n        <p />\n      </div>\n    \n    }else if(sequenceIndex > 0){\n      \n      prevNextButton = <div>\n        <table>\n        <td><button onClick={() => setIndexClipped(index - 1)}>&#8592; Prev</button></td>\n          <td className=\"buttonNavigationClues\"></td>\n          <td><button className=\"buttonNavigationCluesExit heavyBorder\" onClick={() => setIndexClipped(index)}>Back to main explanations</button></td>\n          <td className=\"buttonNavigationClues\"></td>\n          <td><button onClick={() => setIndexClipped(index + 1)}>Next &#8594;</button></td>\n        </table> \n      </div>  \n\n    }  \n  }else{\n        prevNextButton = <div>\n          <table>\n            <td><button onClick={() => setIndexClipped(index - 1)}>&#8592; Prev</button></td>\n            <td className=\"buttonNavigationClues\"></td>\n            <td><button className=\"Disabled\" onClick={() => setSequenceIndexClipped(1)}><span role=\"img\"  aria-label=\"help\">&#x1F4A1;</span> - HELP</button></td>\n            <td className=\"buttonNavigationClues\"></td>\n            <td><button onClick={() => setIndexClipped(index + 1)}>Next &#8594;</button></td>\n          </table> \n        </div>\n  }\n\n  return (\n    <div className=\"App\">\n      {header}\n      {prevNextButton}\n      <p />\n      {prevNextSequenceButton}\n      <Grid vocabulary={vocabulary} counterfact={counterfact} facts={facts} explSeqActive={sequenceIndex} nestedExplSeqActive={nestedIndex} funSequenceIndex={setSequenceIndexClipped} funNestedIndex={setNestedIndexClipped}/>\n    </div>\n    );\n}\n\n\nfunction Grid({ vocabulary, facts, counterfact,explSeqActive,nestedExplSeqActive, funSequenceIndex,funNestedIndex}) {\n\n  const nbTypes = vocabulary.length;\n  const nbEntities = vocabulary[0].length;\n\n  const horizontalTypes = vocabulary.slice(0, -1);\n  const verticalTypes = [...vocabulary].reverse().slice(0, -1);\n\n  return (\n    <div style={styles.parentGrid(nbEntities, nbTypes)}>\n      <div style={styles.parentGridItem(nbEntities)} />\n      {verticalTypes.map(type => (\n        <VocBlock type={type} vertical />\n      ))}\n      {horizontalTypes.map((type, index) => (\n        <>\n          <VocBlock type={type} />\n          {verticalTypes.map((type2, index2) => {\n            if (index >= nbTypes - index2 - 1) {\n              return (<div style={styles.parentGridItemEmpty(nbEntities)} />)\n            }\n            return (\n              <FillBlock type1={type} type2={type2} counterfact={counterfact} facts={facts} explSeqActive={explSeqActive} nestedExplSeqActive={nestedExplSeqActive} funSequenceIndex={funSequenceIndex} funNestedIndex={funNestedIndex}/>            \n              )\n          })}\n        </>\n      ))}\n    </div>\n  )\n}\n\nfunction VocBlock({ type, vertical = false }) {\n  const nbEntities = type.length;\n  return (\n    <div style={styles.parentGridItemVoc(nbEntities, vertical)}>\n      {type.map((entity) => (\n        <div style={styles.childVocGridItem(nbEntities, vertical)}>\n          {entity}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction EmptyGrid({type1, type2}){\n  const nbEntities = type1.length;\n  return (\n      <div style={styles.parentGridItemFill(nbEntities)}>\n        {type1.map(entity1 => (\n          <>\n            {type2.map(entity2 => {\n              const color = \"white\";\n              const frontcolor = \"#000\";\n              return (<div style={styles.childFillGridItem(color, frontcolor)}>{\" \"}</div>);\n            })}\n          </>\n        ))}\n      </div>\n  );\n}\n\nfunction RegularExplanation({ type1, type2, facts, counterfact }){\n  const nbEntities = type1.length;\n  return (\n    <div style={styles.parentGridItemFill(nbEntities)}>\n      {type1.map(entity1 => (\n        <>\n          {type2.map(entity2 => {\n            const derivedKnowledge = getKnowledgeFrom(\n              facts.derived,\n              entity1,\n              entity2\n            );\n            const assumedKnowledge = getKnowledgeFrom(\n              facts.assumptions,\n              entity1,\n              entity2\n            );\n            const knownKnowledge = getKnowledgeFrom(\n              facts.known,\n              entity1,\n              entity2\n            );\n\n            let counterfactColored = null\n\n            if(counterfact != null){\n              counterfactColored = getKnowledgeFrom(\n                [counterfact],\n                entity1,\n                entity2\n              );\n            }\n\n            const knowledge = counterfactColored || derivedKnowledge || assumedKnowledge || knownKnowledge ;\n\n            let color = null;\n            let frontcolor = \"#000\";\n\n            if(counterfactColored!=null && facts.derived[0] === \"UNSAT\"){\n              color = \"whitesmoke\"\n            }else if(counterfact != null && facts.derived[0] === \"UNSAT\" && assumedKnowledge != null){\n              color = \"red\"\n            }\n            else if(derivedKnowledge != null) {\n                color = \"#FF6600\";\n            }else if(assumedKnowledge != null) {\n              color = \"#003399\"; //Asymmetry true/false is not so important here...\n              frontcolor = \"white\";\n            }else if (knowledge != null) {\n                color = \"whitesmoke\";\n              }\n            \n            if(counterfactColored!=null){\n              return (<div style={styles.childNestedButtonItem(color, frontcolor)}>\n                  {knowledge == null ? \" \" : knowledge.value ? \"✔\" : \"-\"}\n                </div>);\n            }else{\n              return (\n                <div style={styles.childFillGridItem(color, frontcolor)}>\n                  {knowledge == null ? \" \" : knowledge.value ? \"✔\" : \"-\"}\n                </div>\n              );\n            }\n\n          })}\n        </>\n      ))}\n    </div>\n  );\n}\n\nfunction SequenceExplanationGrid({ type1, type2, derived, known, funSequenceIndex,funNestedIndex}){\n  const nbEntities = type1.length;\n\n  return (\n    <div style={styles.parentGridItemFill(nbEntities)}>\n      {type1.map(entity1 => (\n        <>\n          {type2.map(entity2 => {\n            const factKnowledge = getKnowledgeFrom(\n              derived,\n              entity1,\n              entity2\n            );\n\n            const knownKnowledge = getKnowledgeFrom(\n              known, \n              entity1, \n              entity2\n            )\n\n            const posInDerived = derived.indexOf(factKnowledge) +1\n            \n            const knowledge = factKnowledge || knownKnowledge;\n\n            let color = \"#C0C0C0\";\n            let frontcolor = \"#000\";\n\n            if (factKnowledge != null) {\n              color = \"lightcoral\";// knowledge.value ? \"#FF6600\" : \"#FF6600\";\n            }else if(knownKnowledge != null){\n              color = \"whitesmoke\";\n            }\n\n            if(factKnowledge != null){\n              return (\n                <div >\n                  <button className=\"coral-button\" onClick={() => {funNestedIndex(1, 3); funSequenceIndex(posInDerived)}}>\n                    {knowledge == null ? \" \" : knowledge.value ? \"✔\" : \"-\"}\n                  </button>        \n                </div>\n              );\n            }else{\n              return (\n                <div style={styles.childFillGridItem(color, frontcolor)}>\n                  {knowledge == null ? \" \" : knowledge.value ? \"✔\" : \"-\"}\n                </div>\n              );\n            }\n          })}\n        </>\n      ))}\n    </div>\n  );\n\n\n}\n\nfunction FillBlock({ type1, type2, counterfact, facts, explSeqActive,nestedExplSeqActive, funSequenceIndex,funNestedIndex }) {\n\n  if(facts === null){\n    return <EmptyGrid type1={type1} type2={type2} />\n  }else if( explSeqActive > 0 & nestedExplSeqActive > 0){\n    return <RegularExplanation facts={facts} counterfact={counterfact} type1={type1} type2={type2}/>\n  }else if( explSeqActive > 0){\n    return <SequenceExplanationGrid derived={facts.derived} known={facts.assumptions} type1={type1} type2={type2} funSequenceIndex={funSequenceIndex} funNestedIndex={funNestedIndex}/>\n  }\n  else{\n    return <RegularExplanation facts={facts} type1={type1} type2={type2} />\n  }\n}\n\nfunction Legend() {\n  return (\n    <div>\n      <h2>\n        <span class=\"line-center\">{legend}</span>\n      </h2>\n      <table>\n        <tr className=\"legend-tr\">\n          <td className=\"legend-td2\">\n            <div className=\"red-full-rectangle\"></div>\n          </td>\n          <td className=\"legend-td\">{legend_new_fact}</td>\n          <td className=\"legend-td2\">\n            <div className=\"blue-full-rectangle\"></div>\n          </td>\n          <td className=\"legend-td\">{legend_derived_fact}</td>\n          <td className=\"legend-td2\">\n            <div className=\"coral-full-rectangle\"></div>\n          </td>\n          <td className=\"legend-td\">Nested Explanation</td>          \n          <td className=\"legend-td2\">\n            <div className=\"unsat-full-rectangle\"></div>\n          </td>\n          <td className=\"legend-td\">Countradiction Unsatisfiable</td>\n              \n        </tr>\n          <tr className=\"legend-tr\">\n          <td className=\"legend-td2\">\n            <div className=\"black-empty-rectangle\"> ✔ </div>\n          </td>\n          <td className=\"legend-td\">{legend_true}</td>\n          <td className=\"legend-td2\">\n            <div className=\"black-empty-rectangle\"> - </div>\n          </td>\n          <td className=\"legend-td\">{legend_false}</td>\n          <td className=\"legend-td2\">\n            <div className=\"black-solid-empty-rectangle\"> - </div>\n          </td>\n          <td className=\"legend-td\">{legend_contradiction}</td>\n        </tr>\n      \n      </table>\n    </div>\n  );\n}\n\nfunction UsedClue({ clues, clue }) {\n  var unique = 0;\n  if(clue !== null){\n    const listClues = clues.map((element) => {\n      if (\n        element === transitivity ||\n        element === bijectivity ||\n        element === combinationConstraints\n      ) {\n        if (clue === transitivity && unique === 0) {\n          unique = 1;\n          return (\n            <div>\n              <li>{logigramConstraint}</li>\n              <ul>\n                <li className=\"clue-used\">{transitivity}</li>\n                <li className=\"clue-unused\">{bijectivity}</li>\n                <li className=\"clue-unused\">{combinationConstraints}</li>\n              </ul>\n            </div>\n          );\n        } else if (clue === bijectivity && unique === 0) {\n          unique = 1;\n          return (\n            <div>\n              <li>{logigramConstraint}</li>\n              <ul>\n                <li className=\"clue-unused\">{transitivity}</li>\n                <li className=\"clue-used\">{bijectivity}</li>\n                <li className=\"clue-unused\">{combinationConstraints}</li>\n              </ul>\n            </div>\n          );\n        } else if (clue === combinationConstraints && unique === 0) {\n          unique = 1;\n          return (\n            <div>\n              <li>{logigramConstraint}</li>\n              <ul>\n                <li className=\"clue-unused\">{transitivity}</li>\n                <li className=\"clue-unused\">{bijectivity}</li>\n                <li className=\"clue-used\">{combinationConstraints}</li>\n              </ul>\n            </div>\n          );\n        } else if (unique === 0) {\n          unique = 1;\n          return (\n            <div>\n              <li>{logigramConstraint}</li>\n              <ul>\n                <li className=\"clue-unused\">{transitivity}</li>\n                <li className=\"clue-unused\">{bijectivity}</li>\n                <li className=\"clue-unused\">{combinationConstraints}</li>\n              </ul>\n            </div>\n          );\n        }else{\n          return <div></div>\n        }\n        \n      } else if (element === clue) {\n        return (\n          <li className=\"clue-used\">\n            {element.charAt(0).toUpperCase() + element.slice(1)}\n          </li>\n        );\n      } else {\n        return (\n          <li className=\"clue-unused\">\n            {element.charAt(0).toUpperCase() + element.slice(1)}\n          </li>\n        );\n      }\n    });\n    return <ol>{listClues}</ol>;\n  }else{\n    const listClues = clues.map((element)=> {\n      if (\n        element !== transitivity &&\n        element !== bijectivity &&\n        element !== combinationConstraints\n      ){\n        return <li className=\"clue-unused\">\n            {element.charAt(0).toUpperCase() + element.slice(1)}\n          </li>\n      }else if(unique === 0){\n        unique = 1\n        return (\n          <div>\n            <li>{logigramConstraint}</li>\n            <ul>\n              <li className=\"clue-unused\">{transitivity}</li>\n              <li className=\"clue-unused\">{bijectivity}</li>\n              <li className=\"clue-unused\">{combinationConstraints}</li>\n            </ul>\n          </div>\n        );\n      }\n      return <div></div>\n    });\n    return <ol>{listClues}</ol>;\n  }\n  \n}\n\nexport default App;","import './App.css';\nimport React from 'react';\nimport './BoxInfo.css';\n// import * as R from 'ramda'\nimport ReactDOM from 'react-dom';\n\nvar cluesTags;\n\nvar selectedBox = 0;\n\nconst cluesIntroText = \"ZebraTutor starts from a plain English language representation of the clues (and a list of all the entities present in the puzzle):\"\nconst tagsIntroText = \"Each word from each natural language clue is tagged using the NTLK perceptron tagger. The output of the POS-tagging process are Part-Of-Speech tagged words:\"\nconst lexiconIntroText = \"The input of our system consists of these clues, combined with the following lexicon (the automated lexicon building does not yet work fully automatically):\"\nconst folIntroText = \"The system outputs the first-order logic representation of the clues in the form of discourse representation theory.\"\nconst idpIntroText = \"Our tool then generates the following translation of each of the clues in the IDP language (where ! is a universal quantifier, ? is an existential quantifier, & is conjunction, | is disjunction and ~ is negation )\"\n\nvar activeClue = 0;\nvar activeClueFol = 0;\n\nvar displayTypes = {\n  clues: 1,\n  postags: 2,\n  chunking_lexicon: 3,\n  fol: 4,\n  idp: 5//,\n  // expl: 6\n};\n\nfunction setToClue(clueNr) {\n\n  if (clueNr >= cluesTags[\"tags\"].length) {\n    activeClue = cluesTags[\"tags\"].length - 1;\n  } else if (clueNr <= 0) {\n    activeClue = 0;\n  } else {\n    activeClue = clueNr;\n  }\n\n  for (let index = 0; index < cluesTags[\"tags\"].length; index++) {\n    const tagName = `tag${index}`\n    var tagChild = document.getElementById(tagName);\n    if (activeClue === index) {\n      tagChild.style.display = 'block';\n    } else {\n      tagChild.style.display = 'none';\n    }\n  }\n}\n\nfunction setToClueFol(clueNr) {\n\n  if (clueNr >= Object.keys(cluesTags[\"fol-logic\"]).length) {\n    activeClueFol = Object.keys(cluesTags[\"fol-logic\"]).length - 1;\n  } else if (clueNr <= 0) {\n    activeClueFol = 0;\n  } else {\n    activeClueFol = clueNr;\n  }\n\n  for (let index = 0; index < Object.keys(cluesTags[\"fol-logic\"]).length; index++) {\n\n    const folName = `fol${index}`\n    var folChild = document.getElementById(folName);\n\n    if (activeClueFol === index) {\n\n      folChild.style.display = 'block';\n    } else {\n\n      folChild.style.display = 'none';\n    }\n  }\n}\n\nfunction setBoxInfoDisplayTo(displayType) {\n\n  if (selectedBox === displayType) {\n    document.getElementById('BoxInfoText').style.display = \"none\";\n    selectedBox = 0\n  } else {\n    document.getElementById('BoxInfoText').style.display = \"block\";\n    selectedBox = displayType\n  }\n\n\n  switch (displayType) {\n    case displayTypes.clues:\n      ReactDOM.render(\n        <Clues clues={cluesTags[\"clues\"]} entities={cluesTags[\"types\"]} />,\n        document.getElementById('BoxInfoText')\n      );\n      \n      break;\n    case displayTypes.postags:\n      ReactDOM.render(\n        <Tags tags={cluesTags[\"tags\"]} />,\n        document.getElementById('BoxInfoText')\n      );\n      break;\n    case displayTypes.chunking_lexicon:\n      ReactDOM.render(\n        <Lexicon lexicon={cluesTags[\"lexicon\"]} />,\n        document.getElementById('BoxInfoText')\n      );\n      break;\n    case displayTypes.fol:\n      ReactDOM.render(\n        <FOL fol={cluesTags[\"fol-logic\"]} />,\n        document.getElementById('BoxInfoText')\n      );\n      break;\n    case displayTypes.idp:\n      ReactDOM.render(\n        <IDP idp={cluesTags[\"idp\"]} />,\n        document.getElementById('BoxInfoText')\n      );\n      break;\n    default:\n\n  }\n}\n\nfunction IDP({idp}){\n\n  \n  const listIdpItems = Object.keys(idp).map((elem) => \n  <div className=\"padding-top\">\n    <tr >\n      <td>{'//'} {elem}</td>\n    </tr>\n    <tr>\n      <td>{idp[elem]}</td>\n    </tr>\n    </div>)\n  const idpTable = <table>{listIdpItems}</table>\n  const introText = <div className=\"grey-text\"> {idpIntroText}</div>\n  var clueBox = <div>{introText}\n  <div className=\"BoxInfoText3 myFont\">\n    \n        {idpTable}\n     \n  </div>\n</div>\n\nreturn clueBox\n}\n\n\nfunction FOL({fol}){\n  const introText = <div className=\"grey-text\"> {folIntroText}</div>\n  const logicRepresentation = <h3>Logic representation</h3>\n  const types = <h3>Types</h3>\n  const CombTypes = <h3>CombTypes</h3>\n\n  const fol_keys = Object.keys(fol);\n  var listItems = []\n\n  for (let index = 0; index < fol_keys.length; index++) {\n    const key = fol_keys[index];\n    const element = fol[key];\n    const keyElem = `fol${index}`\n\n    if (index === activeClue) {\n      listItems.push(\n        <div id={keyElem}>\n          {logicRepresentation}\n          <div >\n          <div className=\"centered-div\">{key}</div>\n          <table className=\"centered-div myFont\">\n          {element[\"logic_representation\"].map(\n            function(elem) {\n              var listvals = []\n              elem.split(\"\").foreach(function(letter) {\n                if(letter === \" \"){\n                  listvals.push(\" \")\n                }else{\n                  listvals.push(letter)\n                }\n              });\n              return <tr className=\"removed-space\"><td><pre>{listvals}</pre></td></tr>\n            }) }\n            </table>\n            </div>\n          {types}\n          <div className=\"td-entities myFont\">\n          {element[\"types\"].replace(/,/g, ', ') }\n          </div>\n          {CombTypes}\n          <div className=\"td-entities myFont\">\n        {element[\"CombTypes\"].replace(/,/g, ', ')}\n        </div>\n        </div>)\n    } else {\n      listItems.push(\n        <div className=\"HiddenBox\" id={keyElem}>\n          {logicRepresentation}\n          <div >\n          <div className=\"centered-div\">{key}</div>\n          <table className=\"centered-div myFont\">\n          {element[\"logic_representation\"].map(\n            function(elem) {\n              var listvals = []\n              elem.split(\"\").foreach(function(letter) {\n                if(letter === \" \"){\n                  listvals.push(\" \")\n                }else{\n                  listvals.push(letter)\n                }\n              })\n              return <tr className=\"removed-space\"><td><pre>{listvals}</pre></td></tr>\n            }) }\n            </table>\n            </div>\n          {types}\n          <div className=\"td-entities myFont\">\n            \n          {element[\"types\"].replace(/,/g, ', ')}\n          {/* {element[\"types\"]} */}\n          </div>\n          {CombTypes}\n          <div className=\"td-entities myFont\">\n        {element[\"CombTypes\"].replace(/,/g, ', ')}\n        {/* {element[\"CombTypes\"]} */}\n        </div>\n        </div>)\n    }\n  }\n\n  var clueBox = <div>    {introText}\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\" ></div>\n        <div id=\"prev-clue\" ><button className=\"col\" onClick={() => setToClueFol(activeClueFol - 1)}>Previous Clue</button></div>\n        <div id=\"next-clue\"><button className=\"col\" onClick={() => setToClueFol(activeClueFol + 1)}>Next Clue</button></div>\n        <div className=\"col\" ></div>\n      </div>\n      <div className=\"row padding-before-clue\">\n\n        <div className=\"col\" ></div>\n        <div >\n          {listItems}\n        </div>\n        <div className=\"col\" ></div>\n      </div>\n    </div>\n    <br></br>\n\n  </div>\n\n  return clueBox\n\n\n}\n\n\nfunction cleanEntities(entities){\n  const types = Object.keys(entities).map((elem)=> elem.toLowerCase());\n  Object.keys(entities)\n        .forEach((elem)=> entities[elem]\n        .forEach((entity) => entity.replace(\"a_\", \"\").split('_')\n        .forEach((splitelem) => types.push(splitelem))))\n\n  return types;\n}\n\nfunction highlightEntities(clue, entities){\n  const cleanedEntities = cleanEntities(entities)\n\n  const cleanedClues = clue.split(' ').map(function(elem) {\n    if((cleanedEntities.indexOf(elem) !== -1)){\n      return <b>{elem} </b>\n    }else{\n      return elem + \" \"\n    }\n    });\n\n  return <td><div>{cleanedClues}</div></td>\n}\n\nfunction Clues({ clues, entities }) {\n\n  const listClues = clues.map((elem) =>\n    <div>\n      <tr>\n        {highlightEntities(elem, entities)}\n      </tr>\n    </div>\n  );\n  const entitiesTable = <table>\n    <tr>\n      <th></th>\n      {Object.keys(entities).map((elem) => <th></th>)}\n    </tr>\n    {Object.keys(entities).map((elem) =>\n      <tr>\n        <td className=\"thick-text\">{elem.charAt(0).toUpperCase() + elem.slice(1)}</td>\n        {entities[elem].map((entity) => <td className=\"td-entities\">{entity}</td>)}\n      </tr>)}\n  </table>;\n\n  const introText = <div className=\"grey-text\"> {cluesIntroText}</div>\n  const cluesTable = <table>{listClues}</table>\n  return (\n    <div>\n      {introText}\n      <h2 className=\"BoxInfoText3-Header\"><span className=\"line-center\" >Entities</span></h2>\n      <div className=\"BoxInfoText3 myFont\">\n        {entitiesTable}\n      </div>\n      <h2 className=\"BoxInfoText3-Header\"><span className=\"line-center\" >Clues</span></h2>\n      <div className=\"BoxInfoText3 myFont\">\n        {cluesTable}\n      </div>\n\n    </div>)\n}\n\nfunction Tags({ tags }) {\n\n  const introText = <div className=\"grey-text\"> {tagsIntroText}</div>\n\n  var listItems = [];\n\n  for (let index = 0; index < tags.length; index++) {\n    const element = tags[index];\n    const keyElem = `tag${index}`\n    if (index === activeClue) {\n      listItems.push(\n        <div id={keyElem} className=\"myFont\">\n          <table>\n            <tr>{element.map((elem) => <td className=\"td-clues-tags thick-text \">{elem[0]}</td>)}</tr>\n            <tr>{element.map((elem) => <td className=\"td-clues-tags\">|</td>)}</tr>\n            <tr >{element.map((elem) => <td className=\"td-clues-tags thick-text\">{elem[1]}</td>)}</tr>\n          </table>\n        </div>)\n    } else {\n      listItems.push(\n        <div className=\"HiddenBox myFont\" id={keyElem}>\n          <table>\n            <tr>{element.map((elem) => <td className=\"td-clues-tags thick-text\">{elem[0]}</td>)}</tr>\n            <tr>{element.map((elem) => <td className=\"td-clues-tags\">|</td>)}</tr>\n            <tr >{element.map((elem) => <td className=\"td-clues-tags thick-text\">{elem[1]}</td>)}</tr>\n          </table>\n        </div>)\n    }\n  }\n\n  var clueBox = <div>    {introText}\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\" ></div>\n        <div id=\"prev-clue\" ><button className=\"col\" onClick={() => setToClue(activeClue - 1)}>Previous Clue</button></div>\n        <div id=\"next-clue\"><button className=\"col\" onClick={() => setToClue(activeClue + 1)}>Next Clue</button></div>\n        <div className=\"col\" ></div>\n      </div>\n      <div className=\"row padding-before-clue\">\n\n        <div className=\"col\" ></div>\n        <div >\n          {listItems}\n        </div>\n        <div className=\"col\" ></div>\n      </div>\n    </div>\n    <br></br>\n\n  </div>\n\n  return clueBox\n}\n\nfunction Lexicon({ lexicon }) {\n  const lexiconitems = Object.keys(lexicon).map((lex) =>\n    <tr>\n      <td className=\"thick-text\">{lex}</td>\n      <td className=\"td-clues-tags\"></td>\n      <td className=\"thick-text\">{lexicon[lex]}</td>\n    </tr>\n\n  );\n  const lexiconTable = <table>{lexiconitems}</table>\n  const introText = <div className=\"grey-text\"> {lexiconIntroText}  </div>\n\n  return (\n    <div>\n      {introText}\n      <div className=\"BoxInfoText3 myFont\">\n        {lexiconTable}\n      </div>\n    </div>)\n}\n\nfunction InfoText() {\n  return (\n\n    <div className=\"row\">\n      <div id=\"BoxInfoTextParent\" className=\"col-12\">\n        <div id=\"BoxInfoText\" className=\"BoxInfoText2\">\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nfunction InfoButtons() {\n  return (\n    <div className=\"row\">\n      <div id=\"clue-button\" className=\"col-sm\"><button className=\"button-step3\" onClick={() => setBoxInfoDisplayTo(displayTypes.clues)}>Input</button></div>\n      <div className=\"div-centered-hv col-sm\">&#8594;</div>\n      <div id=\"pos-button\" className=\"col-sm\"><button className=\"button-step3\" onClick={() => setBoxInfoDisplayTo(displayTypes.postags)}>Pos Tagging</button></div>\n      <div className=\"div-centered-hv col-sm\">&#8594;</div>\n      <div id=\"chun-button\" className=\"col-sm\"><button className=\"button-step\" onClick={() => setBoxInfoDisplayTo(displayTypes.chunking_lexicon)}>Chunking & Lexicon Building</button></div>\n      <div className=\" div-centered-hv col-sm\">&#8594;</div>\n      <div id=\"fol-button\" className=\"col-sm\"><button className=\"button-step4\" onClick={() => setBoxInfoDisplayTo(displayTypes.fol)}>Discourse representation theory</button></div>\n      <div className=\" div-centered-hv col-sm\">&#8594;</div>\n      <div id=\"idp-button\" className=\"col-sm\"><button className=\"button-step2\" onClick={() => setBoxInfoDisplayTo(displayTypes.idp)}>IDP (first-order logic)</button></div>\n      <div className=\" div-centered-hv col-sm\">&#8594;</div>\n      <div className=\" div-centered-hv col-sm-2\">Explanation Generation + Visualisation</div>\n    </div>)\n}\n\nfunction BoxInfo({problemName}) {\n\n  cluesTags  = require(`./source_explanations/${problemName}.tags.json`);\n\n  return (\n    <div>\n      <h2><span  class=\"line-center\">The process</span></h2>\n      <InfoButtons />\n      <InfoText />\n    </div>\n  );\n}\n\nexport default BoxInfo;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\n// import ReactDOM from 'react-dom';\n\nconst tagsIntroText = <div><p>ZebraTutor is an end-to-end solution for solving logic grid puzzles and for explaining, in a human-understandable way, how this solution can be obtained from the clues. Here is an example puzzle. The computer has already solved the problem ! But can you solve it ? </p><p className=\"centered-text\"> Click <b>prev</b> and <b>next</b> to navigate in the human-like solving process.</p></div>\n\nconst blockQuoteIntroText = <div className=\"puzzle-text\"><i>{tagsIntroText} </i></div>\n\nfunction PuzzleInfo() {\n  return (\n    <div >\n      <h1 className=\"centered-text padding-top\">Zebra Tutor: Explaining Logic Grid Puzzles</h1>\n      <div>\n        {blockQuoteIntroText}\n      </div>\n    </div>\n  );\n}\n\nexport default PuzzleInfo;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport BoxInfo from './BoxInfo';\nimport PuzzleInfo from './PuzzleInfo';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nconst problemName = 'nielspasta-split-nested'; //pasta\n//const problemName = 'p5-split'; //origin\n\nReactDOM.render( <PuzzleInfo /> , document.getElementById('problemIntro'));\nReactDOM.render( <App problemName={problemName} /> , document.getElementById('root'));\nReactDOM.render( <BoxInfo problemName={problemName}  />, document.getElementById('box-info'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}