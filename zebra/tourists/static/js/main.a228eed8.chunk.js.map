{"version":3,"sources":["../../bos/output sync /^/.//.*/.output/.json$","../../bos/output sync /^/.//.*/.voc/.json$","../../bos/output sync /^/.//.*/.tags/.json$","App.js","BoxInfo.js","PuzzleInfo.js","serviceWorker.js","index.js"],"names":["map","./niels-split.output.json","./niels.output.json","./p2_types.output.json","./p5-split.output.json","./p5.output.json","./tutorial-split.output.json","./tutorial.output.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./niels-split.voc.json","./niels.voc.json","./p2_types.voc.json","./p5-split.voc.json","./p5.voc.json","./tutorial.voc.json","./niels-split.tags.json","./p5-split.tags.json","steps","require","concat","vocabulary","sol","bijectivity","logigramConstraint","transitivity","combinationConstraints","logicon","legend","legend_new_fact","legend_derived_fact","legend_false","legend_true","initialState","clue","known","derived","assumptions","reducer","state","next","toConsumableArray","derivations","getKnowledgeFrom","inArray","entity1","entity2","find","fact","subject","object","matches","styles","parentGrid","nbEntities","nbTypes","display","width","height","grid-template-columns","repeat","parentGridItem","border","parentGridItemVoc","vertical","_objectSpread","background-color","color","flex-direction","childVocGridItem","align-items","justify-content","writing-mode","size","parentGridItemEmpty","parentGridItemFill","childFillGridItem","frontcolor","MyLegend","react_default","a","createElement","class","className","UsedClue","_ref","clues","unique","listClues","element","charAt","toUpperCase","slice","Grid","_ref2","facts","length","horizontalTypes","verticalTypes","reverse","style","type","VocBlock","index","Fragment","type2","index2","FillBlock","type1","_ref3","_ref3$vertical","entity","_ref4","derivedKnowledge","assumedKnowledge","knownKnowledge","knowledge","value","App","uniqueclues","filter","item","pos","indexOf","el","i","splice","push","cleanClues","_React$useState","React","useState","_React$useState2","slicedToArray","setIndex","factsOverTime","useMemo","R","some","setIndexClipped","newIndex","ReactDOM","render","document","getElementById","header","onClick","cluesTags","selectedBox","cluesIntroText","tagsIntroText","lexiconIntroText","folIntroText","idpIntroText","activeClue","activeClueFol","displayTypes","postags","chunking_lexicon","fol","idp","setToClue","clueNr","tagName","tagChild","setToClueFol","folName","folChild","setBoxInfoDisplayTo","displayType","Clues","entities","Tags","tags","Lexicon","lexicon","FOL","IDP","listIdpItems","elem","idpTable","introText","logicRepresentation","types","CombTypes","fol_keys","listItems","keyElem","listvals","split","letter","replace","highlightEntities","cleanedEntities","toLowerCase","splitelem","cleanEntities","cleanedClues","entitiesTable","cluesTable","_ref5","lexiconitems","lex","lexiconTable","InfoText","InfoButtons","BoxInfo","blockQuoteIntroText","PuzzleInfo","Boolean","window","location","hostname","match","src_PuzzleInfo","src_App","src_BoxInfo","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a228eed8.chunk.js","sourcesContent":["var map = {\n\t\"./niels-split.output.json\": 16,\n\t\"./niels.output.json\": 17,\n\t\"./p2_types.output.json\": 18,\n\t\"./p5-split.output.json\": 19,\n\t\"./p5.output.json\": 20,\n\t\"./tutorial-split.output.json\": 21,\n\t\"./tutorial.output.json\": 22\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;","var map = {\n\t\"./niels-split.voc.json\": 24,\n\t\"./niels.voc.json\": 25,\n\t\"./p2_types.voc.json\": 26,\n\t\"./p5-split.voc.json\": 27,\n\t\"./p5.voc.json\": 28,\n\t\"./tutorial.voc.json\": 29\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","var map = {\n\t\"./niels-split.tags.json\": 32,\n\t\"./p5-split.tags.json\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 31;","import React from 'react';\nimport './App.css';\nimport * as R from 'ramda'\nimport ReactDOM from 'react-dom';\n\n//const problemName = 'p5'\nconst problemName = 'niels-split'\n//const problemName = 'p5-split'\nconst steps = require(`../../bos/output/${problemName}.output.json`)\nconst vocabulary = require(`../../bos/output/${problemName}.voc.json`)\n\n// String constants used in the file \nconst sol = \"Solution!\"\nconst bijectivity = \"Bijectivity\"\nconst logigramConstraint = \"Logigram Constraint\"\nconst transitivity = \"Transitivity constraint\"\nconst combinationConstraints = \"Combination of logigram constraints\"\nconst logicon = \"Logigram constraints\"\n\n\nconst legend = \"Legend\"\nconst legend_new_fact = \"New fact\"\nconst legend_derived_fact = \"Derived fact\"\nconst legend_false = \"False\"\nconst legend_true = \"True\"\n\nconst initialState = {\n  clue: null,\n  known: [],\n  derived: [],\n  assumptions: []\n}\nfunction reducer(state, next) {\n  return {\n    clue: next.clue,\n    known: [...state.known, ...state.derived],\n    derived: next.derivations,\n    assumptions: next.assumptions,\n  }\n}\nfunction cleanedFacts(steps) {\n  const factsOverTime = R.scan(reducer, initialState, steps)\n  return factsOverTime.filter(\n    facts => facts.derived.some(\n      knowledge => getKnowledgeFrom(facts.known, knowledge.subject, knowledge.object) == null\n    )\n  )\n}\n\nfunction getKnowledgeFrom(inArray, entity1, entity2) {\n  return inArray.find(matches(entity1, entity2))\n}\n\nfunction matches(entity1, entity2) {\n  return fact => {\n    if (fact.subject === entity1 && fact.object === entity2) {\n      return true\n    }\n    if (fact.object === entity1 && fact.subject === entity2) {\n      return true\n    }\n    return false\n  }\n}\n\nconst size = 32\nconst styles = {\n  parentGrid: (nbEntities, nbTypes) => ({\n    display: 'grid',\n    width: nbEntities * nbTypes * size,\n    height: nbEntities * nbTypes * size,\n    \"grid-template-columns\": `auto `.repeat(nbTypes),\n  }),\n  parentGridItem: (nbEntities) => ({\n    width: size * nbEntities - 2,\n    height: size * nbEntities - 2,\n    border: '1px solid black',\n  }),\n  parentGridItemVoc: (nbEntities, vertical) => ({\n    ...styles.parentGridItem(nbEntities),\n    'background-color': 'whitesmoke',\n    color: 'black',\n    display: 'grid',\n    \"grid-template-columns\": `auto `.repeat(vertical ? nbEntities : 1),\n    'flex-direction': vertical ? 'row' : 'column',\n  }),\n  childVocGridItem: (nbEntities, vertical) => ({\n    border: '1px dashed black',\n    display: 'flex',\n    'align-items': 'center',\n    'justify-content': 'center',\n    ...(vertical ? {\n      'writing-mode': 'vertical-lr',\n      width: size - 2,\n      height: size * nbEntities - 2,\n    } : {\n        width: size * nbEntities - 2,\n        height: size - 2,\n      })\n  }),\n  parentGridItemEmpty: (nbEntities) => ({\n    width: nbEntities * size,\n    height: nbEntities * size,\n  }),\n  parentGridItemFill: (nbEntities) => ({\n    ...styles.parentGridItem(nbEntities),\n    display: 'grid',\n    \"grid-template-columns\": `auto `.repeat(nbEntities),\n  }),\n  childFillGridItem: (color, frontcolor) => ({\n    width: size - 2,\n    height: size - 2,\n    border: '1px dashed black',\n    display: 'flex',\n    'align-items': 'center',\n    'justify-content': 'center',\n    'background-color': color,\n    'color': frontcolor,\n  })\n}\n\nfunction cleanClues(steps) {\n  const clues = steps.map(element => element.clue);\n  const uniqueclues = clues.filter(function (item, pos) {\n    return clues.indexOf(item) === pos;\n  }).filter(function (el) {\n    return [bijectivity, logigramConstraint, transitivity, combinationConstraints, logicon].indexOf(el) < 0;\n  });\n\n  for (var i = uniqueclues.length - 1; i >= 0; i--) {\n    if (uniqueclues[i] === logicon || uniqueclues[i] === sol) {\n      uniqueclues.splice(i, 1);\n    }\n  }\n  // uniqueclues.push(logicon)\n\n  // var filteredClues = uniqueclues\n  uniqueclues.push(bijectivity);\n  uniqueclues.push(transitivity);\n  uniqueclues.push(combinationConstraints);\n\n  return uniqueclues\n}\n\nfunction App() {\n  const clues = cleanClues(steps)\n\n  const [index, setIndex] = React.useState(0)\n  const factsOverTime = React.useMemo(() => {\n    return cleanedFacts(steps)\n  }, [])\n\n  function setIndexClipped(newIndex) {\n    if (newIndex >= factsOverTime.length) {\n      setIndex(factsOverTime.length - 1)\n    } else if (newIndex < 0) {\n      setIndex(0)\n    } else {\n      setIndex(newIndex)\n    }\n  }\n  const facts = factsOverTime[index]\n\n  ReactDOM.render(\n    <div className=\"Clues\">\n      {/* <h2>Clues</h2> */}\n      <h2><span  class=\"line-center\">Clues</span></h2>\n\n      <UsedClue clues={clues} clue={facts.clue} />\n      <MyLegend />\n      <p></p>\n    </div>,\n    document.getElementById('clues')\n  );\n\n    const header =       <h2><span  class=\"line-center\">Puzzle</span></h2>\n\n  return (\n    <div className=\"App\">\n      {/* <h2>Puzzle</h2> */}\n    {header}\n      <div>\n        <button onClick={() => setIndexClipped(index - 1)}>Prev</button>\n        <button onClick={() => setIndexClipped(index + 1)}>Next</button>\n      </div>\n      <p />\n      <Grid vocabulary={vocabulary} facts={facts} />\n    </div>\n  );\n}\n\nfunction MyLegend() {\n  return (\n    <div>\n\n<h2><span  class=\"line-center\">{legend}</span></h2>\n      {/* <h2>{legend}</h2> */}\n      <table>\n        <tr className=\"legend-tr\">\n          <td className=\"legend-td2\"><div className=\"red-full-rectangle\"></div></td>\n          <td className=\"legend-td\">{legend_new_fact}</td>\n          <td className=\"legend-td2\"><div className=\"blue-full-rectangle\"></div></td>\n          <td className=\"legend-td\">{legend_derived_fact}</td>\n          <td className=\"legend-td2\"><div className=\"black-empty-rectangle\"> ✔ </div></td>\n          <td className=\"legend-td\">{legend_true}</td>\n          <td className=\"legend-td2\"><div className=\"black-empty-rectangle\"> - </div></td>\n          <td className=\"legend-td\">{legend_false}</td>\n        </tr>\n\n      </table>\n    </div>)\n}\n\n\nfunction UsedClue({ clues, clue }) {\n\n  var unique = 0;\n\n  const listClues = clues.map(function (element) {\n    if ((element === transitivity || element === bijectivity || element === combinationConstraints)) {\n      if (clue === transitivity && unique === 0) {\n        unique = 1\n        return (<div>\n          <li >\n            {logigramConstraint}\n          </li>\n          <ul>\n            <li className=\"clue-used\">{transitivity}</li>\n            <li className=\"clue-unused\">{bijectivity}</li>\n            <li className=\"clue-unused\">{combinationConstraints}</li>\n          </ul>\n        </div>)\n      } else if (clue === bijectivity && unique === 0) {\n        unique = 1\n        return (<div>\n          <li >\n            {logigramConstraint}\n          </li>\n          <ul>\n            <li className=\"clue-unused\">{transitivity}</li>\n            <li className=\"clue-used\">{bijectivity}</li>\n            <li className=\"clue-unused\">{combinationConstraints}</li>\n          </ul>\n        </div>)\n      } else if (clue === combinationConstraints && unique === 0) {\n        unique = 1\n        return (<div>\n          <li >\n            {logigramConstraint}\n          </li>\n          <ul>\n            <li className=\"clue-unused\">{transitivity}</li>\n            <li className=\"clue-unused\">{bijectivity}</li>\n            <li className=\"clue-used\">{combinationConstraints}</li>\n          </ul>\n        </div>)\n      } else if (unique === 0) {\n        unique = 1\n        return (<div>\n          <li >\n            {logigramConstraint}\n          </li>\n          <ul>\n            <li className=\"clue-unused\">{transitivity}</li>\n            <li className=\"clue-unused\">{bijectivity}</li>\n            <li className=\"clue-unused\">{combinationConstraints}</li>\n          </ul>\n        </div>)\n      }\n    }\n    else if (element === clue) {\n      return <li className=\"clue-used\">{element.charAt(0).toUpperCase() + element.slice(1)}</li>\n    } else {\n      return <li className=\"clue-unused\">{element.charAt(0).toUpperCase() + element.slice(1)}</li>\n    }\n  }\n  );\n  return (<ol>{listClues}</ol>)\n}\n\nfunction Grid({ vocabulary, facts }) {\n  const nbTypes = vocabulary.length\n  const nbEntities = vocabulary[0].length\n\n  const horizontalTypes = vocabulary.slice(0, -1)\n  const verticalTypes = [...vocabulary].reverse().slice(0, -1)\n\n  return (\n    <div style={styles.parentGrid(nbEntities, nbTypes)}>\n      <div style={styles.parentGridItem(nbEntities)} />\n      {verticalTypes.map(type => (\n        <VocBlock type={type} vertical />\n      ))}\n      {horizontalTypes.map((type, index) => (\n        <>\n          <VocBlock type={type} />\n          {verticalTypes.map((type2, index2) => {\n            if (index >= nbTypes - index2 - 1) {\n              return (<div style={styles.parentGridItemEmpty(nbEntities)} />)\n            }\n            return (\n              <FillBlock type1={type} type2={type2} facts={facts} />\n            )\n          })}\n        </>\n      ))}\n    </div>\n  )\n}\n\nfunction VocBlock({ type, vertical = false }) {\n  const nbEntities = type.length\n  return (\n    <div style={styles.parentGridItemVoc(nbEntities, vertical)}>\n      {type.map(entity => (\n        <div style={styles.childVocGridItem(nbEntities, vertical)}>{entity}</div>\n      ))}\n    </div>\n  )\n}\n\nfunction FillBlock({ type1, type2, facts }) {\n  const nbEntities = type1.length\n  return (\n    <div style={styles.parentGridItemFill(nbEntities)}>\n      {type1.map(entity1 => (\n        <>\n          {type2.map(entity2 => {\n            const derivedKnowledge = getKnowledgeFrom(facts.derived, entity1, entity2)\n            const assumedKnowledge = getKnowledgeFrom(facts.assumptions, entity1, entity2)\n            const knownKnowledge = getKnowledgeFrom(facts.known, entity1, entity2)\n\n            const knowledge = derivedKnowledge || assumedKnowledge || knownKnowledge\n            let color = null\n            let frontcolor = '#000'\n            if (derivedKnowledge != null) {\n              color = knowledge.value ? '#FF6600' : '#FF6600'\n            } else if (assumedKnowledge != null) {\n              color = '#003399' //Asymmetry true/false is not so important here... \n              frontcolor = 'white'\n            } else if (knowledge != null) {\n              color = 'whitesmoke'\n            }\n\n            return (\n              <div style={styles.childFillGridItem(color, frontcolor)}>{knowledge == null ? ' ' : knowledge.value ? '✔' : '-'}</div>\n            )\n          })}\n        </>\n      )\n      )}\n    </div>\n  )\n}\nexport default App;\n","import './App.css';\nimport React from 'react';\nimport './BoxInfo.css';\n// import * as R from 'ramda'\nimport ReactDOM from 'react-dom';\n\nconst problemName = 'niels-split';\n\nconst cluesTags = require(`../../bos/output/${problemName}.tags.json`);\n\nvar selectedBox = 0;\n\nconst cluesIntroText = \"ZebraTutor starts from a plain English language representation of the clues (and a list of all the entities present in the puzzle):\"\nconst tagsIntroText = \"Each word from each natural language clue is tagged using the NTLK perceptron tagger. The output of the POS-tagging process are Part-Of-Speech tagged words:\"\nconst lexiconIntroText = \"The input of our system consists of these clues, combined with the following lexicon (the automated lexicon building does not yet work fully automatically):\"\nconst folIntroText = \"The system outputs the first-order logic representation of the clues in the form of discourse representation theory.\"\nconst idpIntroText = \"Our tool then generates the following translation of each of the clues in the IDP language (where ! is a universal quantifier, ? is an existential quantifier, & is conjunction, | is disjunction and ~ is negation )\"\n\nvar activeClue = 0;\nvar activeClueFol = 0;\n\nvar displayTypes = {\n  clues: 1,\n  postags: 2,\n  chunking_lexicon: 3,\n  fol: 4,\n  idp: 5//,\n  // expl: 6\n};\n\nfunction setToClue(clueNr) {\n\n  if (clueNr >= cluesTags[\"tags\"].length) {\n    activeClue = cluesTags[\"tags\"].length - 1;\n  } else if (clueNr <= 0) {\n    activeClue = 0;\n  } else {\n    activeClue = clueNr;\n  }\n\n  for (let index = 0; index < cluesTags[\"tags\"].length; index++) {\n    const tagName = `tag${index}`\n    var tagChild = document.getElementById(tagName);\n\n    // const idpName = `idp${index}`\n    // var idpChild = document.getElementById(idpName);\n    if (activeClue === index) {\n      tagChild.style.display = 'block';\n      // idpChild.style.display = 'block';\n    } else {\n      tagChild.style.display = 'none';\n      // idpChild.style.display = 'none';\n    }\n  }\n}\n\nfunction setToClueFol(clueNr) {\n\n  if (clueNr >= Object.keys(cluesTags[\"fol-logic\"]).length) {\n    activeClueFol = Object.keys(cluesTags[\"fol-logic\"]).length - 1;\n  } else if (clueNr <= 0) {\n    activeClueFol = 0;\n  } else {\n    activeClueFol = clueNr;\n  }\n\n  for (let index = 0; index < Object.keys(cluesTags[\"fol-logic\"]).length; index++) {\n\n    const folName = `fol${index}`\n    var folChild = document.getElementById(folName);\n\n    // const idpName = `idp${index}`\n    // var idpChild = document.getElementById(idpName);\n    if (activeClueFol === index) {\n\n      folChild.style.display = 'block';\n      // idpChild.style.display = 'block';\n    } else {\n\n      folChild.style.display = 'none';\n      // idpChild.style.display = 'none';\n    }\n  }\n}\n\n\nfunction setBoxInfoDisplayTo(displayType) {\n\n  if (selectedBox === displayType) {\n    document.getElementById('BoxInfoText').style.display = \"none\";\n    selectedBox = 0\n  } else {\n    document.getElementById('BoxInfoText').style.display = \"block\";\n    selectedBox = displayType\n  }\n\n\n  switch (displayType) {\n    case displayTypes.clues:\n      ReactDOM.render(\n        <Clues clues={cluesTags[\"clues\"]} entities={cluesTags[\"types\"]} />,\n        document.getElementById('BoxInfoText')\n      );\n      break;\n    case displayTypes.postags:\n      ReactDOM.render(\n        <Tags tags={cluesTags[\"tags\"]} />,\n        document.getElementById('BoxInfoText')\n      );\n      break;\n    case displayTypes.chunking_lexicon:\n      ReactDOM.render(\n        <Lexicon lexicon={cluesTags[\"lexicon\"]} />,\n        document.getElementById('BoxInfoText')\n      );\n      break;\n    case displayTypes.fol:\n      ReactDOM.render(\n        <FOL fol={cluesTags[\"fol-logic\"]} />,\n        document.getElementById('BoxInfoText')\n      );\n      break;\n    case displayTypes.idp:\n      ReactDOM.render(\n        <IDP idp={cluesTags[\"idp\"]} />,\n        document.getElementById('BoxInfoText')\n      );\n      break;\n    // case displayTypes.expl:\n    //   ReactDOM.render(\n    //     <Clues clues={cluesTags[\"clues\"]} />,\n    //     document.getElementById('BoxInfoText')\n    //   );\n    //   break;\n    default:\n\n  }\n}\n\nfunction IDP({idp}){\n\n  \n  const listIdpItems = Object.keys(idp).map((elem) => \n  <div className=\"padding-top\">\n    <tr >\n      <td>// {elem}</td>\n    </tr>\n    <tr>\n      <td>{idp[elem]}</td>\n    </tr>\n    </div>)\n  const idpTable = <table>{listIdpItems}</table>\n  const introText = <div className=\"grey-text\"> {idpIntroText}</div>\n  var clueBox = <div>{introText}\n  <div className=\"BoxInfoText3 myFont\">\n    \n        {idpTable}\n     \n  </div>\n</div>\n\nreturn clueBox\n}\n\n\nfunction FOL({fol}){\n  const introText = <div className=\"grey-text\"> {folIntroText}</div>\n  const logicRepresentation = <h3>Logic representation</h3>\n  const types = <h3>Types</h3>\n  const CombTypes = <h3>CombTypes</h3>\n\n  const fol_keys = Object.keys(fol);\n  var listItems = []\n\n  for (let index = 0; index < fol_keys.length; index++) {\n    const key = fol_keys[index];\n    const element = fol[key];\n    const keyElem = `fol${index}`\n\n    if (index === activeClue) {\n      listItems.push(\n        <div id={keyElem}>\n          {logicRepresentation}\n          <div >\n          <table className=\"centered-div myFont\">\n          {element[\"logic_representation\"].map(\n            function(elem) {\n              var listvals = []\n              elem.split(\"\").map(function(letter) {\n                if(letter === \" \"){\n                  listvals.push(\" \")\n                }else{\n                  listvals.push(letter)\n                }\n              })\n              return <tr className=\"removed-space\"><td><pre>{listvals}</pre></td></tr>\n            }) }\n            </table>\n            </div>\n          {types}\n          <div className=\"td-entities myFont\">\n          {element[\"types\"].replace(/,/g, ', ') }\n          </div>\n          {CombTypes}\n          <div className=\"td-entities myFont\">\n        {element[\"CombTypes\"].replace(/,/g, ', ')}\n        </div>\n        </div>)\n    } else {\n      listItems.push(\n        <div className=\"HiddenBox\" id={keyElem}>\n          {logicRepresentation}\n          <div >\n          <table className=\"centered-div myFont\">\n          {element[\"logic_representation\"].map(\n            function(elem) {\n              var listvals = []\n              elem.split(\"\").map(function(letter) {\n                if(letter === \" \"){\n                  listvals.push(\" \")\n                }else{\n                  listvals.push(letter)\n                }\n              })\n              return <tr className=\"removed-space\"><td><pre>{listvals}</pre></td></tr>\n            }) }\n            </table>\n            </div>\n          {types}\n          <div className=\"td-entities myFont\">\n          {element[\"types\"].replace(/,/g, ', ')}\n          {/* {element[\"types\"]} */}\n          </div>\n          {CombTypes}\n          <div className=\"td-entities myFont\">\n        {element[\"CombTypes\"].replace(/,/g, ', ')}\n        {/* {element[\"CombTypes\"]} */}\n        </div>\n        </div>)\n    }\n  }\n\n  var clueBox = <div>    {introText}\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\" ></div>\n        <div id=\"prev-clue\" ><button className=\"col\" onClick={() => setToClueFol(activeClueFol - 1)}>Previous Clue</button></div>\n        <div id=\"next-clue\"><button className=\"col\" onClick={() => setToClueFol(activeClueFol + 1)}>Next Clue</button></div>\n        <div className=\"col\" ></div>\n      </div>\n      <div className=\"row padding-before-clue\">\n\n        <div className=\"col\" ></div>\n        <div >\n          {listItems}\n        </div>\n        <div className=\"col\" ></div>\n      </div>\n    </div>\n    <br></br>\n\n  </div>\n\n  return clueBox\n\n\n}\n\n\nfunction cleanEntities(entities){\n  const types = Object.keys(entities).map((elem)=> elem.toLowerCase());\n  Object.keys(entities)\n        .map((elem)=> entities[elem]\n        .map((entity) => entity.replace(\"a_\", \"\").split('_')\n        .map((splitelem) => types.push(splitelem))))\n\n  return types;\n}\n\nfunction highlightEntities(clue, entities){\n  const cleanedEntities = cleanEntities(entities)\n\n  const cleanedClues = clue.split(' ').map(function(elem) {\n    if((cleanedEntities.indexOf(elem) !== -1)){\n      return <b>{elem} </b>\n    }else{\n      return elem + \" \"\n    }\n    });\n\n  // return <td className=\"thick-text\">{clue.charAt(0).toUpperCase() + clue.slice(1)}.</td>\n  return <td><div>{cleanedClues}</div></td>\n}\n\nfunction Clues({ clues, entities }) {\n\n  const listClues = clues.map((elem) =>\n    <div>\n      <tr>\n        {highlightEntities(elem, entities)}\n      </tr>\n    </div>\n  );\n  // const listEntities = JSON.stringify(entities);\n  const entitiesTable = <table>\n    <tr>\n      <th></th>\n      {Object.keys(entities).map((elem) => <th></th>)}\n    </tr>\n    {Object.keys(entities).map((elem) =>\n      <tr>\n        <td className=\"thick-text\">{elem.charAt(0).toUpperCase() + elem.slice(1)}</td>\n        {entities[elem].map((entity) => <td className=\"td-entities\">{entity}</td>)}\n      </tr>)}\n  </table>;\n\n  const introText = <div className=\"grey-text\"> {cluesIntroText}</div>\n  const cluesTable = <table>{listClues}</table>\n  // const entitiesTable = <table>{listEntities}</table>\n  return (\n    <div >\n      {introText}\n      <h2 className=\"BoxInfoText3-Header\"><span className=\"line-center\" >Entities</span></h2>\n      <div className=\"BoxInfoText3 myFont\">\n        {entitiesTable}\n      </div>\n      <h2 className=\"BoxInfoText3-Header\"><span className=\"line-center\" >Clues</span></h2>\n      <div className=\"BoxInfoText3 myFont\">\n        {cluesTable}\n      </div>\n\n    </div>)\n}\n\nfunction Tags({ tags }) {\n\n  const introText = <div className=\"grey-text\"> {tagsIntroText}</div>\n\n  var listItems = [];\n\n  for (let index = 0; index < tags.length; index++) {\n    const element = tags[index];\n    const keyElem = `tag${index}`\n    if (index === activeClue) {\n      listItems.push(\n        <div id={keyElem} className=\"myFont\">\n          <table>\n            <tr>{element.map((elem) => <td className=\"td-clues-tags thick-text \">{elem[0]}</td>)}</tr>\n            <tr>{element.map((elem) => <td className=\"td-clues-tags\">|</td>)}</tr>\n            <tr >{element.map((elem) => <td className=\"td-clues-tags thick-text\">{elem[1]}</td>)}</tr>\n          </table>\n        </div>)\n    } else {\n      listItems.push(\n        <div className=\"HiddenBox myFont\" id={keyElem}>\n          <table>\n            <tr>{element.map((elem) => <td className=\"td-clues-tags thick-text\">{elem[0]}</td>)}</tr>\n            <tr>{element.map((elem) => <td className=\"td-clues-tags\">|</td>)}</tr>\n            <tr >{element.map((elem) => <td className=\"td-clues-tags thick-text\">{elem[1]}</td>)}</tr>\n          </table>\n        </div>)\n    }\n  }\n\n  var clueBox = <div>    {introText}\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\" ></div>\n        <div id=\"prev-clue\" ><button className=\"col\" onClick={() => setToClue(activeClue - 1)}>Previous Clue</button></div>\n        <div id=\"next-clue\"><button className=\"col\" onClick={() => setToClue(activeClue + 1)}>Next Clue</button></div>\n        <div className=\"col\" ></div>\n      </div>\n      <div className=\"row padding-before-clue\">\n\n        <div className=\"col\" ></div>\n        <div >\n          {listItems}\n        </div>\n        <div className=\"col\" ></div>\n      </div>\n    </div>\n    <br></br>\n\n  </div>\n\n  return clueBox\n}\n\nfunction Lexicon({ lexicon }) {\n  const lexiconitems = Object.keys(lexicon).map((lex) =>\n    <tr>\n      <td className=\"thick-text\">{lex}</td>\n      <td className=\"td-clues-tags\"></td>\n      <td className=\"thick-text\">{lexicon[lex]}</td>\n    </tr>\n\n  );\n  const lexiconTable = <table>{lexiconitems}</table>\n  const introText = <div className=\"grey-text\"> {lexiconIntroText}  </div>\n\n  return (\n    <div>\n      {introText}\n      <div className=\"BoxInfoText3 myFont\">\n        {lexiconTable}\n      </div>\n    </div>)\n}\n\nfunction InfoText() {\n  return (\n\n    <div className=\"row\">\n      <div id=\"BoxInfoTextParent\" className=\"col-12\">\n        <div id=\"BoxInfoText\" className=\"BoxInfoText2\">\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nfunction InfoButtons() {\n  return (\n    <div className=\"row\">\n      <div id=\"clue-button\" className=\"col-sm\"><button className=\"button-step3\" onClick={() => setBoxInfoDisplayTo(displayTypes.clues)}>Input</button></div>\n      <div className=\"div-centered-hv col-sm\">----></div>\n      <div id=\"pos-button\" className=\"col-sm\"><button className=\"button-step3\" onClick={() => setBoxInfoDisplayTo(displayTypes.postags)}>Pos Tagging</button></div>\n      <div className=\"div-centered-hv col-sm\">----></div>\n      <div id=\"chun-button\" className=\"col-sm\"><button className=\"button-step\" onClick={() => setBoxInfoDisplayTo(displayTypes.chunking_lexicon)}>Chunking & Lexicon Building</button></div>\n      <div className=\" div-centered-hv col-sm\">----></div>\n      <div id=\"fol-button\" className=\"col-sm\"><button className=\"button-step4\" onClick={() => setBoxInfoDisplayTo(displayTypes.fol)}>Discourse representation theory</button></div>\n      <div className=\" div-centered-hv col-sm\">----></div>\n      <div id=\"idp-button\" className=\"col-sm\"><button className=\"button-step2\" onClick={() => setBoxInfoDisplayTo(displayTypes.idp)}>IDP (first-order logic)</button></div>\n      <div className=\" div-centered-hv col-sm\">----></div>\n      {/* <div id=\"expl-button\" className=\"col-2\"><button className=\"button-step\" onClick={() => setBoxInfoDisplayTo(displayTypes.expl)}>6. Explanation Generation</button></div> */}\n      {/* <div id=\"expl-button\" className=\"col-sm\"><button className=\"button-step\" onClick={() => setBoxInfoDisplayTo(displayTypes.expl)}>6. Explanation Generation</button></div> */}\n      <div className=\"div-centered-hv col-sm\">Explanation Generation</div>\n    </div>)\n}\n\nfunction BoxInfo() {\n  return (\n    <div>\n      {/* <h2>The process</h2> */}\n      <h2><span  class=\"line-center\">The process</span></h2>\n\n      <InfoButtons />\n      <InfoText />\n    </div>\n  );\n}\n\nexport default BoxInfo;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\n// import ReactDOM from 'react-dom';\n\nconst tagsIntroText = <div><p>ZebraTutor is an end-to-end solution for solving logic grid puzzles and for explaining, in a human-understandable way, how this solution can be obtained from the clues. Here is an example puzzle. The computer has already solved the problem ! But can you solve it ? </p><p className=\"centered-text\"> Click <b>prev</b> and <b>next</b> to navigate in the human-like solving process.</p></div>\n\nconst blockQuoteIntroText = <div className=\"puzzle-text\"><i>{tagsIntroText} </i></div>\n\nfunction PuzzleInfo() {\n  return (\n    <div >\n      <h1 className=\"centered-text padding-top\">Zebra Tutor: a Holy Grail</h1>\n      <div>\n        {blockQuoteIntroText}\n      </div>\n    </div>\n  );\n}\n\nexport default PuzzleInfo;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport BoxInfo from './BoxInfo';\nimport PuzzleInfo from './PuzzleInfo';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render( <PuzzleInfo /> , document.getElementById('problemIntro'));\nReactDOM.render( <App/> , document.getElementById('root'));\nReactDOM.render( <BoxInfo/> , document.getElementById('box-info'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}